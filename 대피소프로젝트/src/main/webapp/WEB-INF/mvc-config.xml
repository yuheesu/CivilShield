<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">
<!-- 
XML 스키마는 DTD의 제한 사항을 개선한 차세대 문서 구조화 기법이다.
XML 스키마의 특징
-XML로 작성되었다.
-XML 네임스페이스와 데이터 타입을 지원한다.

XML 문서 내에서 유일한 엘리먼트 이름이나 속성 이름을 제공하기 위해 사용된다.
XML은 사용자가 자유롭게 엘리먼트를 정의할 수 있는 장점을 가지고 있지만 사용되는 엘리먼트가 XML 문서에서 중복될 수도 있다.
이름이 같은 엘리먼트에 의해 발생할 수 있는 이름 충돌을 해결하기 위해 사용되는 것이 namespace이다.
네임스페이스를 사용하기 위해 "xmlns"라는 속성을 사용한다.
"xmlns" 속성값은 네임스페이스를 식별하기 위한 네임스페이스 이름이며, XML문서 내에서는 유일해야 한다.

엘리먼트 이름은 기본 네임스페이스를 선언하는 엘리먼트 명을 지정하고 xmlns 속성은 기본 네임스페이스를 지정하기 위한 속성이다. 
기본 네임스페이스는 접두어를 따로 기술하지 않고 기본 네임스페이스를 지정하면 해당 엘리먼트와 하위 엘리먼트가 모두 네임스페이스에 속하게 된다.
기본 네임스페이스는 네임스페이스 접두어를 붙이지 않은 엘리먼트에만 적용되고 네임스페이스 접두어가 있는 속성에는 적용되지 않는다.

xmlns:xsi - 인스턴스 네임스페이스 URI를 지정한다.
xmlns - 기본 네임스페이스의 선언을 명시한다.
xsi:schemaLocation - 두개의 값이 공백으로 구분된다. 첫번째는 사용할 네임스페이스(보통 기본 네임스페이스와 동일)이고, 두번째는 참조할 스키마 파일명이다.

type - 데이타의 형식. 아래는 내장된 테이타 형식.
xs:string
xs:decimal
xs:integer
xs:boolean
xs:date
xs:time
minOccurs - 문서 내에서 사용할 수 있는 최소 횟수. 기본값은 1.
maxOccurs - 문서 내에서 사용할 수 있는 최대 횟수. 기본값은 1.
default - 기본값을 지정. 값이 명시되지 않은 요소에 기본값을 할당한다.
fixed -  고정값을 지정. 고정값 이외에 다른 값을 명시할 수 없다.

targetNamespace - 작성하는 스키마 문서 내에서 사용자가 임의로 정의하는 문서 요소(요소, 속성 등)이 위치할 네임스페이스를 나타내기 위해서 사용한다.
attributeFormDefault, elementFormDefault - XML 문서 내의 요소와 속성이 한정되는 형태를 지정한다.
qualified - 요소 또는 속성이 네임스페이스 URI와 결합된다. 일반적으로 이것이 기본값이다.
unqualified - 요소 또는 속성이 네임스페이스 URI와 결합되지 않는다.
xmlns:xs - 스키마 스펙에서 명시하는 네임스페이스를 나타낸기 위해서 사용한다.
xmlns - 접두사를 명시하지 않고 네임스페이스를 선언하기 위해서 사용한다. 일반적으로 targetNamespace의 URI와 동일하다.
 -->
    <!-- Uncomment and your base-package here:
         <context:component-scan
            base-package="org.springframework.samples.web"/>  -->

    <context:component-scan base-package="com.gsitm">
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller" />
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Service" />
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Repository" />
 	</context:component-scan>

    <mvc:annotation-driven />
	<mvc:default-servlet-handler />
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
	        <!-- Example: a logical view name of 'showMessage' is mapped to '/WEB-INF/jsp/showMessage.jsp' -->
	        <property name="prefix" value="/WEB-INF/view/"/>
	        <property name="suffix" value=".jsp"/>
	</bean>    
	
	<bean class="org.springframework.web.servlet.view.BeanNameViewResolver">
		<property name="order" value="1" />
	</bean>
	
	
	<!-- For Tiles Tag -->
	<!-- <bean id="tilesViewResolver" class="org.springframework.web.servlet.view.UrlBasedViewResolver">
        <property name="viewClass" value="org.springframework.web.servlet.view.tiles3.TilesView" />
        <property name="order" value="1" />순서를 우선으로 지정
    </bean>
     
    <bean id="tilesConfigurer" class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">
        <property name="definitions">
            <list>
                <value>/WEB-INF/web.xml</value>
            </list>
        </property>
    </bean> -->
    
    <!-- /For Tiles Tag -->

	<bean class="org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping" />
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="defaultEncoding" value="utf-8" />
	</bean>
</beans>
